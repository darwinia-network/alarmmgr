name: Release

on:
  push:
    tags:
      - "v*"
env:
  OPENSSL_DIR: /home/runner/openssl
  OPENSSL_STATIC: 1

jobs:
  build-package:
    name: Build package
    runs-on: ubuntu-latest
    container:
      image: ubuntu:16.04
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          apt update -y
          apt install --no-install-recommends -y \
            git curl ca-certificates \
            make gcc g++ clang-4.0 \
            libssl-dev pkg-config

      - name: Build openssl
        run: |
          curl https://www.openssl.org/source/openssl-1.1.1l.tar.gz | tar xz
          cd openssl-1.1.1l
          ./config --prefix=${{ env.OPENSSL_DIR }} -static -fPIC
          make -j4
          make install

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1

      - name: Build package
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Collect shared
        run: |
          mkdir -p shared
          mv target/x86_64-unknown-linux-gnu/release/alarmmgr shared/

      - name: Upload shared
        uses: actions/upload-artifact@v2
        with:
          name: shared-artifact
          path: shared

  build-docker-image:
    name: Build image
    runs-on: ubuntu-latest
    needs: [ build-linux ]
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: shared-artifact
          path: shared

      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.QUAY_IO_BOT_USERNAME }}
          password: ${{ secrets.QUAY_IO_BOT_PASSWORD }}
          registry: quay.io

      - uses: olegtarasov/get-tag@v2.1
        id: tag-name
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 7

      - name: Build and publish docker image
        run: |
          IMAGE_NAME=alarmmgr
          IMAGE_PREFIX=quay.io/darwinia-network
          IMAGE_PUSH_NAME_TAG=${IMAGE_PREFIX}/${IMAGE_NAME}:${GIT_TAG_NAME}
          IMAGE_PUSH_NAME_SHA=${IMAGE_PREFIX}/${IMAGE_NAME}:sha-${SHA}
          docker build \
            -t ${IMAGE_PUSH_NAME_TAG} \
            -t ${IMAGE_PUSH_NAME_SHA} \
            -f .maintain/docker/Dockerfile \
            .
          docker push ${IMAGE_PUSH_NAME_TAG}
          docker push ${IMAGE_PUSH_NAME_SHA}
